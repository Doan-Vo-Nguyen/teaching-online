components:
  schemas:
    Auth:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "abc@gmail.com"
        password:
          type: string
          format: password
          example: "password123"
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Invalid input"
    UnauthorizedError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Unauthorized"
    Success:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "User registered successfully"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successfully"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          username:
                            type: string
                            example: "JohnDoe"
                          fullname:
                            type: string
                            example: "John Doe"
                          role:
                            type: array
                            items:
                              type: string
                              example: "student"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            example:
              success: false
              message: "Invalid input"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
            example:
              success: false
              message: "Unauthorized"
  /auth/register:
    post:
      tags:
        - Auth
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Register successfully"
                data:
                  id: 1
                  username: "johndoe"
                  fullname: "John Doe"
                  email: "user@example.com"
                  role: ["student"]
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            example:
              success: false
              message: "Invalid input"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            example:
              success: false
              message: "User already exists"
  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Forgot password
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
            example: user@example.com
      responses:
        '200':
          description: Reset code sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Reset code sent successfully"
                data:
                  redirect: "/reset-password"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "Invalid input"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "User not found"

  /auth/reset-password:
    put:
      tags:
        - Auth
      summary: Reset password
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
            example: user@example.com
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "123456"
                password:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Reset password successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Reset password successfully"
                data:
                  redirect: "/login"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "Invalid input"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "User not found"
        '401':
          description: Invalid or expired code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "Invalid or expired code"
  /auth/refresh-token:
    post:
      tags:
        - Auth
      summary: Refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  example: 1
      responses:
        '200':
          description: Refresh token successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Refresh token successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                message: "Invalid input"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  example: 1
      responses:
        '200':
          description: Logout successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Logout successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
              example:
                success: false
                message: "Invalid input"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              example:
                success: false
                message: "Unauthorized"

