components:
  schemas:
    User:
      type: object
      required:
        - username
        - fullname
        - gender
        - dob
        - password
        - email
        - role
        - address
        - phone
      properties:
        id:
          type: integer
          description: The auto-generated id of the user
        username:
          type: string
          description: The username
        fullname:
          type: string
          description: The user fullname
        dob:
          type: string
          format: date
          description: The user date of birth
        password:
          type: string
          description: The user password
        role:
          type: array
          items:
            type: string
          description: User roles
        address:
          type: string
          description: The user address
        email:
          type: string
          format: email
          description: The user email
        profile_picture:
          type: string
          description: The user profile picture
        phone:
          type: string
          description: The user phone number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /app/users:
    get:
      tags:
        - Users
      summary: Returns all users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "Users retrieved successfully"
                data:
                  - id: 1
                    username: "User A"
                    fullname: "New User"
                    password: "XXXXXXXXXXX"
                    email: "XXXXXXXXXXXXX"
                    role: ["admin"]
                    profile_picture: "https://example.com/profile.jpg"
                    phone: "1234567890"
                    gender: "male"
                    address: "123, Example Street, Example City"
                    dob: "2021-01-01"
                    created_at: "2021-01-01T00:00:00Z"
                    updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
    post:
      tags:
        - Users
      summary: Create a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - fullname
                - password
                - email
                - phone
              properties:
                username:
                  type: string
                  example: "User A"
                fullname:
                  type: string
                  example: "New User"
                password:
                  type: string
                  example: "password123"
                email:
                  type: string
                  example: "abc@gmail.com"
                profile_picture:
                  type: string
                  example: "https://example.com/profile.jpg"
                phone:
                  type: string
                  example: "1234567890"
                gender:
                  type: string
                address:
                  type: string
                  example: "123, Example Street, Example City"
                dob:
                  type: string
                  example: "2021-01-01"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User created successfully"
                data:
                  id: 1
                  username: "User A"
                  fullname: "New User"
                  password: "XXXXXXXXXXX"
                  email: "XXXXXXXXXXXXX"
                  role: ["admin"]
                  profile_picture: "https://example.com/profile.jpg"
                  phone: "1234567890"
                  gender: "male"
                  address: "123, Example Street, Example City"
                  dob: "2021-01-01"
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /app/users/search:
    get:
      tags:
        - Users
      summary: Search users by name
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
          description: Search query
      responses:
        "200":
          description: User found successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User found successfully"
                data:
                  - id: 1
                    username: "User A"
                    fullname: "New User"
                    password: "XXXXXXXXXXX"
                    email: "XXXXXXXXXXXXX"
                    role: ["admin"]
                    profile_picture: "https://example.com/profile.jpg"
                    phone: "1234567890"
                    gender: "male"
                    address: "123, Example Street, Example City"
                    dob: "2021-01-01"
                    created_at: "2021-01-01T00:00:00Z"
                    updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /app/users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User found successfully"
                data:
                  id: 1
                  username: "User A"
                  fullname: "New User"
                  password: "XXXXXXXXXXX"
                  email: "XXXXXXXXXXXXX"
                  role: ["admin"]
                  profile_picture: "https://example.com/profile.jpg"
                  phone: "1234567890"
                  gender: "male"
                  address: "123, Example Street, Example City"
                  dob: "2021-01-01"
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: "#/components/schemas/NotFoundError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
    patch:
      tags:
        - Users
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                fullname:
                  type: string
                password:
                  type: string
                email:
                  type: string
                profile_picture:
                  type: string
                phone:
                  type: string
                gender:
                  type: string
                address:
                  type: string
                dob:
                  type: string
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User updated successfully"
                data:
                  id: 1
                  username: "User A"
                  fullname: "Updated User"
                  password: "XXXXXXXXXXX"
                  email: "XXXXXXXXXXXXX"
                  role: ["admin"]
                  profile_picture: "https://example.com/profile.jpg"
                  phone: "1234567890"
                  gender: "male"
                  address: "123, Example Street, Example City"
                  dob: "2021-01-01"
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
    delete:
      tags:
        - Users
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User deleted successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /app/users/{id}/password/:
    put:
      tags:
        - Users
      summary: Update user password
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: "oldpassword123"
                newPassword:
                  type: string
                  example: "newpassword123"
      responses:
        "200":
          description: User password updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User password updated successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /app/users/{id}/roles/:
    patch:
      tags:
        - Users
      summary: Update user role
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: "admin"
      responses:
        "200":
          description: User role updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User role updated successfully"
                data:
                  id: 1
                  username: "User A"
                  fullname: "New User"
                  password: "XXXXXXXXXXX"
                  email: "XXXXXXXXXXXXX"
                  role: ["admin"]
                  profile_picture: "https://example.com/profile.jpg"
                  phone: "1234567890"
                  gender: "male"
                  address: "123, Example Street, Example City"
                  dob: "2021-01-01"
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /app/users/{id}/join/{class_join_code}:
    post:
      tags:
        - Users
      summary: Join a class
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
        - in: path
          name: class_join_code
          required: true
          schema:
            type: string
          description: Class join code
      responses:
        "200":
          description: User joined class successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "User joined class successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Class not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: "#/components/schemas/NotFoundError"
  /app/users/{id}/class:
    post:
      tags:
        - Users
      summary: Create a class by teacher
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                class_name:
                  type: string
                  example: "Basic Programming Class"
                description:
                  type: string
                  example: "This is a basic programming class"
      responses:
        "200":
          description: Class created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
              example:
                success: true
                message: "Class created successfully"
                data:
                  id: 1
                  name: "Basic Programming Class"
                  description: "This is a basic programming class"
                  teacher_id: 1
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"