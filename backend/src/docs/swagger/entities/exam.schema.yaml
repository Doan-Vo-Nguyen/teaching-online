components:
  schemas:
    Exam:
      type: object
      required:
        - class_id
        - title
        - description
        - type
        - due_date
      properties:
        class_id:
          type: string
          description: The ID of the class the exam belongs to
        title:
          type: string
          description: The name of the exam
        description:
          type: string
          description: The description of the exam
        type:
          type: string
          description: The type of the exam
        due_date:
          type: string
          description: The due date of the exam
    Success:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          type: object
          nullable: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /app/exams:
    get:
      tags:
        - Exams
      summary: Get all exams
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of exams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Get all exams successfully"
                data:
                  - id: 1
                    class_id: 1
                    title: "Exam 1"
                    description: "This is the first exam"
                    type: "test"
                    due_date: "2021-12-31T23:59:59Z"
                    type_for_student: "common"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    post:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Create a new exam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - class_id
                - title
                - description
                - type
                - due_date
                - type_for_student
              properties:
                class_id:
                  type: string
                  description: The ID of the class the exam belongs to
                  example: 1234
                title:
                  type: string
                  description: The name of the exam
                  example: Exam 1
                description:
                  type: string
                  description: The description of the exam
                  example: This is the first exam
                type:
                  type: string
                  description: The type of the exam
                  example: test
                due_date:
                  type: string
                  description: The due date of the exam
                  example: 2021-12-31:23:59:59
                type_for_student:
                  type: string
                  description: The type of the exam for student
                  example: common
      responses:
        "201":
          description: Exam created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Create exam successfully"
                data:
                  id: 1
                  class_id: 1
                  title: "Exam 1"
                  description: "This is the first exam"
                  type: "test"
                  due_date: "2021-12-31T23:59:59Z"
                  type_for_student: "common"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /app/exams/{id}:
    get:
      tags:
        - Exams
      summary: Get an exam by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Get exam by id successfully"
                data:
                  id: 1
                  class_id: 1
                  title: "Exam 1"
                  description: "This is the first exam"
                  type: "test"
                  due_date: "2021-12-31T23:59:59Z"
                  type_for_student: "common"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Update an exam by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
      responses:
        "200":
          description: Exam updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Update exam successfully"
                data:
                  id: 1
                  class_id: 1
                  title: "Updated Exam"
                  description: "This is the updated exam"
                  type: "test"
                  due_date: "2021-12-31T23:59:59Z"
                  type_for_student: "common"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Delete an exam by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Delete exam successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /app/exams/{id}/content:
    get:
      tags:
        - Exams
      summary: Get exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam content retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Get exam content by id successfully"
                data:
                  - id: 1
                    exam_id: 1
                    description: "This is the first exam"
                    title: "Exam 1"
                    created_at: "2021-01-01T00:00:00Z"
                    updated_at: "2021-01-01T00:00:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Exams
      summary: Create exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
      responses:
        "201":
          description: Exam content created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Create exam content successfully"
                data:
                  - id: 1
                    exam_id: 1
                    description: "This is the first exam"
                    title: "Exam 1"
                    created_at: "2021-01-01T00:00:00Z"
                    updated_at: "2021-01-01T00:00:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Exams
      summary: Delete exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam content deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Delete exam content successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam content not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /app/exams/content/{id}:
    patch:
      tags:
        - Exams
      summary: Update exam content by exam content ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_type:
                  type: string
                  example: "question"
                content:
                  type: object
                  example: { question: "What is 2+2?", options: ["3", "4", "5", "6"], answer: "4" }
            example:
              content_type: "question"
              content: { question: "What is 2+2?", options: ["3", "4", "5", "6"], answer: "4" }
      responses:
        "200":
          description: Exam content updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Update exam content successfully"
                data:
                  id: 1
                  exam_id: 1
                  content_type: "question"
                  content: { question: "What is 2+2?", options: ["3", "4", "5", "6"], answer: "4" }
                  created_at: "2021-01-01T00:00:00Z"
                  updated_at: "2021-01-01T00:00:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam content not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Exams
      summary: Delete exam content by exam content ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam content deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Delete exam content successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403': 
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam content not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /app/exams/{classId}/{teacherId}:
    post:
      tags:
        - Exams
      summary: Create exam by class ID and teacher ID
      security:
        - bearerAuth: []
      parameters:
        - name: classId
          in: path
          required: true
          schema:
            type: string
          description: ID of the class
        - name: teacherId
          in: path
          required: true
          schema:
            type: string
          description: ID of the teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - type
                - due_date
                - type_for_student
              properties:
                title:
                  type: string
                  description: The name of the exam
                  example: Exam 1
                description:
                  type: string
                  description: The description of the exam
                  example: This is the first exam
                type:
                  type: string
                  description: The type of the exam
                  example: test
                due_date:
                  type: string
                  description: The due date of the exam
                  example: 2021-12-31:23:59:59
                type_for_student:
                  type: string
                  description: The type of the exam for student
                  example: common
            example:
              title: Exam 1
              description: This is the first exam
              type: test
              due_date: 2021-12-31:23:59:59
              type_for_student: common
      responses:
        "201":
          description: Exam created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Create exam successfully"
                data:
                  id: 1
                  class_id: 1
                  title: "Exam 1"
                  description: "This is the first exam"
                  type: "test"
                  due_date: "2021-12-31T23:59:59Z"
                  type_for_student: "common"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Class or teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /app/exams/{id}/content/{exam_content_id}:
    get:
      tags:
        - Exams
      summary: Get detail exam by exam ID and exam content ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the exam
        - name: exam_content_id
          in: path
          required: true
          schema:
            type: string
          description: ID of the exam content
      responses:
        "200":
          description: Detail exam retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                success: true
                message: "Get detail exam successfully"
                data:
                  exam:
                    id: 1
                    class_id: 1
                    title: "Exam 1"
                    description: "This is the first exam"
                    type: "test"
                    due_date: "2021-12-31T23:59:59Z"
                    type_for_student: "common"
                  content:
                    id: 1
                    exam_id: 1
                    content_type: "question"
                    content: { question: "What is 2+2?", options: ["3", "4", "5", "6"], answer: "4" }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Exam or exam content not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

    
