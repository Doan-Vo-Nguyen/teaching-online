components:
  schemas:
    Exam:
      type: object
      required:
        - class_id
        - title
        - description
        - type
        - due_date
      properties:
        class_id:
          type: string
          description: The ID of the class the exam belongs to
        title:
          type: string
          description: The name of the exam
        description:
          type: string
          description: The description of the exam
        type:
          type: string
          description: The type of the exam
        due_date:
          type: string
          description: The due date of the exam
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /app/exams:
    get:
      tags:
        - Exams
      summary: Get all exams
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of exams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exam'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    post:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Create a new exam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - class_id
                - title
                - description
                - type
                - due_date
                - type_for_student
              properties:
                class_id:
                  type: string
                  description: The ID of the class the exam belongs to
                  example: 1234
                title:
                  type: string
                  description: The name of the exam
                  example: Exam 1
                description:
                  type: string
                  description: The description of the exam
                  example: This is the first exam
                type:
                  type: string
                  description: The type of the exam
                  example: test
                due_date:
                  type: string
                  description: The due date of the exam
                  example: 2021-12-31:23:59:59
                type_for_student:
                  type: string
                  description: The type of the exam for student
                  example: common
      responses:
        "201":
          description: Exam created successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /app/exams/{id}:
    get:
      tags:
        - Exams
      summary: Get an exam by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    patch:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Update an exam by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
      responses:
        "200":
          description: Exam updated successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    delete:
      tags:
        - Exams
      security:
        - bearerAuth: []
      summary: Delete an exam by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Exam deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /app/exams/{id}/content:
    get:
      tags:
        - Exams
      summary: Get exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam content retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    description: The content of the exam
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    post:
      tags:
        - Exams
      summary: Create exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: object
                  description: The content to add to the exam
      responses:
        "201":
          description: Exam content created successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    delete:
      tags:
        - Exams
      summary: Delete exam content by exam ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Exam content deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /app/exams/content/{id}:
    patch:
      tags:
        - Exams
      summary: Update exam content by exam content ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamContent'
            example:
              exam_content_id: 1
              title: Exam 1
              description: This is the first exam
      responses:
        "200":
          description: Exam content updated successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    delete:
      tags:
        - Exams
      summary: Delete exam content by exam content ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exam content deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403': 
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /app/exams/{classId}/{teacherId}:
    post:
      tags:
        - Exams
      summary: Create exam by class ID and teacher ID
      security:
        - bearerAuth: []
      parameters:
        - name: classId
          in: path
          required: true
          schema:
            type: string
          description: ID of the class
        - name: teacherId
          in: path
          required: true
          schema:
            type: string
          description: ID of the teacher

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - type
                - due_date
                - type_for_student
              properties:
                title:
                  type: string
                  description: The name of the exam
                  example: Exam 1
                description:
                  type: string
                  description: The description of the exam
                  example: This is the first exam
                type:
                  type: string
                  description: The type of the exam
                  example: test
                due_date:
                  type: string
                  description: The due date of the exam
                  example: 2021-12-31:23:59:59
                type_for_student:
                  type: string
                  description: The type of the exam for student
                  example: common
      responses:
        "201":
          description: Exam created successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
    
