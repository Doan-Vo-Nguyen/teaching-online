# src/docs/swagger/openapi.yaml
openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API documentation for Teaching Online Web Application
  contact:
    name: Nguyen Doan Vo BE
    email: wwwnguyendoan123@gmail.com

servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    User:
      type: object
      required:
        - username
        - password
        - role
      properties:
        id:
          type: integer
          description: The auto-generated id of the user
        username:
          type: string
          description: The username
        password:
          type: string
          description: The user password
        role:
          type: array
          items:
            type: string
          description: User roles
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        status:
          type: integer
        message:
          type: string
        data:
          type: object

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /users:
    get:
      tags:
        - Users
      summary: Returns all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      tags:
        - Users
      summary: Create a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - role
              properties:
                username:
                  type: string
                  example: "newuser"
                password:
                  type: string
                  example: "password123"
                role:
                  type: array
                  items:
                    type: string
                  example: ["user"]
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'

  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
    
    put:
      tags:
        - Users
      summary: Update user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
    
    delete:
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'

  /users/{user_id}/role:
    put:
      tags:
        - Users
      summary: Update user role
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: array
                  items:
                    type: string
                  example: ["admin"]
      responses:
        '200':
          description: User role updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'